name: BTD DevOps CHG Pipeline
on: 
    workflow_dispatch:
    workflow_call:
       
jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        steps:           
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            - name: Set up JDK 11
              uses: actions/setup-java@v1
              with:
                  java-version: 11
            - name: Cache SonarCloud packages
              uses: actions/cache@v1
              with:
                  path: ~/.sonar/cache
                  key: ${{ runner.os }}-sonar
                  restore-keys: ${{ runner.os }}-sonar
            - name: Cache Maven packages
              uses: actions/cache@v1
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2
    # test:
    #     name: Test
    #     needs: build
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/checkout@v2
    #           with:
    #               fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    #         - name: List current directory
    #           run: ls -a
    #         - name: Run Tests with Maven
    #           run: mvn -B test --file pom.xml
            # run: |
            #       ls -l
            # mvn clean test
            # run: mvn test
            # mvn -B test --file ./devops-test-repo/pom.xml
            # - name: What's in the target directory
            #   run: |
            #         cd target
            #         ls -a
            # - name: Sonarcloud Scan
            #  env:
            #      GITHUB_TOKEN: ${{ secrets.GHP_TOKEN }}  # Needed to get PR information, if any
            #      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            #  run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=devops-test-repo
            # - name: Sonar Cloud Analysis
            #   if: success() # always() failure() success()
            #   run: >                  
            #     mvn -B verify -DskipTests org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.organization=$SONAR_ORG_KEY -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_TOKEN
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GHP_TOKEN }}
            #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            #       SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
            #       SONAR_URL: ${{ secrets.SONAR_URL }}
            #       SONAR_ORG_KEY: ${{ secrets.SONAR_ORG_KEY }}
#place sonar here
            #- name: Run JUnit Tests
            #  run: mvn test -Dmaven.test.failure.ignore=true surefire-report:report
            # - name: ServiceNow DevOps Unit Test Results
            #   uses: ServiceNow/servicenow-devops-test-report@main
            #   with:
            #       # Devops Integration User Name
            #       devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
            #       # Devops Integration User Password
            #       devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
            #       # ServiceNow Instance Name
            #       instance-url: ${{ secrets.SN_INSTANCE_URL }}
            #       # Orchestration Tool Id
            #       tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
            #       # Job Name
            #       job-name: 'Test' # Should be same name as declared in 'name' clause of the current Stage
            #       # Github Context
            #       context-github: ${{ toJSON(github) }}
            #       # JUnit xml report file name with path
            #       xml-report-filename: target/surefire-reports/testng-results.xml # if only JUnit tests, use target/surefire-reports/testng-results.xml
            #                                                                       # if both JUnit & TestNG tests, use target/surefire-reports/testng-junit-results/testng-results.xml
            #       # GitHub Custom Action
            #       test-type: # optional, default is JUnit  
    PostTest:
         name: post test stage
         needs: build 
         runs-on: ubuntu-latest
         steps:
            - name: Run deployment scripts
              run: echo Completed Deployment
              
    change:
        # jobs that must complete successfully before this job will run
        needs: PostTest
        # type of machine to run the job on
        runs-on: ubuntu-latest
        name: 'ServiceNow DevOps Change Automation'
        steps:
          - name: ServiceNow Change
            uses: ServiceNow/servicenow-devops-change@v3.0.0
            with:
              # Devops Integration Token
              devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
              # ServiceNow Instance URL
              instance-url: ${{ secrets.SN_INSTANCE_URL }}
              # Orchestration Tool Id
              tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
              # GitHub Context
              context-github: ${{ toJSON(github) }}
              # Display Name of the Job
              job-name: 'ServiceNow DevOps Change Automation'
              change-request: '{"attributes":{"chg_model":{"name":"DevOps"}, "requested_by":{"name": "DevOps System"},"assignment_group":{"name": "Change management"},"priority": "2","comments": "This is a sample pipeline script to be added in your change step","work_notes": "Update this to work_notes","start_date": "","end_date": ""}}'
              # You can specify the requested_by attribute either with name or sys_id. Example: "requested_by":{"name": "Test User"} or "requested_by": "62826bf03710200044e0bfc8bcbe5df1"
              # You can specify the assignment_group attribute either with name or sys_id. Example: "assignment_group":{"name": "Change Approval Team"} or "assignment_group": "5f721d93c0a8010e015533746de18bf9"
              # start_date: Enter the planned start date
              # end_date: Enter the planned end date

          
    postdeploy:
        name: Post Deploy
        needs: change
        runs-on: ubuntu-latest
        steps:
            - name: Run deployment scripts
              run: echo Completed Deployment
