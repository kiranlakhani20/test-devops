
name: DeploymentWorkflow
on: 
    workflow_dispatch:
    workflow_call:

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        steps:           
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            - name: Set up JDK 11
              uses: actions/setup-java@v1
              with:
                  java-version: 11
            - name: Cache SonarCloud packages
              uses: actions/cache@v1
              with:
                  path: ~/.sonar/cache
                  key: ${{ runner.os }}-sonar
                  restore-keys: ${{ runner.os }}-sonar
            - name: Cache Maven packages
              uses: actions/cache@v1
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2

              
    # integrationTest:
    #     name: Integration Tests
    #     needs: build
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: ServiceNow DevOps Register Artifact
    #           uses: ServiceNow/servicenow-devops-register-artifact@main
    #           with:
    #               # Devops Integration User Name
    #               devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
    #               # Devops Integration User Password
    #               devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
    #               # ServiceNow Instance URL
    #               instance-url: ${{ secrets.SN_INSTANCE_URL }}
    #               # Orchestration Tool Id
    #               tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
    #               # Display Name of the Job
    #               job-name: 'Integration Tests'
    #               # Github Context
    #               context-github: ${{ toJSON(github) }}
    #               # List of Artifacts to be registered
    #               artifacts: '[
    #                    {
    #                       "name": "app-devops.jar",
    #                       "version": "1.${{ github.run_number }}",
    #                       "semanticVersion": "1.${{ github.run_number }}.0",
    #                       "repositoryName": "${{ github.repository }}"
    #                    },
    #                    {
    #                       "name": "app-devops-integrations.jar",
    #                       "version": "1.${{ github.run_number }}",
    #                       "semanticVersion": "1.${{ github.run_number }}.0",
    #                       "repositoryName": "${{ github.repository }}"
    #                    },
    #                    {
    #                       "name": "app-devops-workspace.jar",
    #                       "version": "1.${{ github.run_number }}",
    #                       "semanticVersion": "1.${{ github.run_number }}.0",
    #                       "repositoryName": "${{ github.repository }}"
    #                    }
    #            ]'
    #         - name: ServiceNow DevOps Register Package
    #         # You may pin to the exact commit or the version.
    #         # uses: ServiceNow/servicenow-devops-register-package@96a351e6f06e592011b9bdd7da5b2af26506d86b
    #           uses: ServiceNow/servicenow-devops-register-package@main
    #           with:
    #               # ServiceNow Devops Integration User Name
    #               devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
    #               # ServiceNow Devops Integration User Password
    #               devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
    #               # ServiceNow Instance URL
    #               instance-url: ${{ secrets.SN_INSTANCE_URL }}
    #               # Orchestration Tool Id of the tool created in ServiceNow
    #               tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
    #               # Github Context
    #               context-github: ${{ toJSON(github) }}
    #               # List of Artifacts in JSON format
    #               artifacts: '[
    #                   {
    #                       "name": "app-devops.jar",
    #                       "version": "1.${{ github.run_number }}",
    #                       "semanticVersion": "1.${{ github.run_number }}.0",
    #                       "repositoryName": "${{ github.repository }}"
    #                   },
    #                   {
    #                       "name": "app-devops-integrations.jar",
    #                       "version": "1.${{ github.run_number }}",
    #                       "semanticVersion": "1.${{ github.run_number }}.0",
    #                       "repositoryName": "${{ github.repository }}"
    #                   },
    #                   {
    #                       "name": "app-devops-workspace.jar",
    #                       "version": "1.${{ github.run_number }}",
    #                       "semanticVersion": "1.${{ github.run_number }}.0",
    #                       "repositoryName": "${{ github.repository }}"
    #                   }
    #               ]'
    #               # Name of the Package that contains list of artifacts
    #               package-name: 'app-devops-change-velocity.war'
    #               # Display Name of Job
    #               job-name: 'Integration Tests'
    # deploy:
    #     name: Deploy
    #     needs: integrationTest
    #     runs-on: ubuntu-latest
    #     steps:     
    #         - name: ServiceNow DevOps Change Automation
    #           uses: ServiceNow/servicenow-devops-change@dev
    #           with:
    #               # ServiceNow Instance URL
    #               instance-url: ${{ secrets.SN_INSTANCE_URL }}
    #               # Devops Integration User Name
    #               devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
    #               # Devops Integration User Password
    #               devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
    #               # Orchestration Tool Id
    #               tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
    #               # Display Name of the Job
    #               job-name: 'Deploy'
    #               # Github Context
    #               context-github: ${{ toJSON(github) }}
    #               # The max. time in seconds to wait until the action should fail.
    #               timeout: 240 # optional, default is 3600
    #               # The time in seconds to wait between trying the API.
    #               interval: 100 # optional, default is 100
    #               # The customized inputs to create change with the requested details.
    #               change-request: '{
    #                   "setCloseCode": "true",
    #                   "attributes": {
    #                       "short_description": "Automated Software Deployment",
    #                       "chg_model":"adffaa9e4370211072b7f6be5bb8f2ed",
    #                       "description": "Automated Software Deployment.",
    #                       "assignment_group": "a715cd759f2002002920bde8132e7018",
    #                       "implementation_plan": "Software update is tested and results can be found in Test Summaries Tab.",
    #                       "backout_plan": "When software fails in production, the previous software release will be re-deployed.",
    #                       "test_plan": "Testing if the software was successfully deployed"
    #                   }
    #               }'

    postdeploy:
        name: Post Deploy
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Run deployment scripts
              run: echo Completed Deployment
